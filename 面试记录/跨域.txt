跨域：同源策略的限制

我知道有三种方式：
第一种： jsonp（json+padding）：实现原理是利用script标签的src属性可以跨域加载别的域中的文件来实现的
	假设有一个a.com和b.com，现在a.com想访问b.com，在a.com中的一个网页中加入下面的代码：
	<script>
		function aaa(data){
			//对data进行相应的操作
		}
	</script>
	<script src="http://www.b.com/test.php?name=lisi&callback=aaa"></script>

	在b.com中的test.php中可以接收传递过来的参加name还有callback，然后执行：
	b.com中执行
	echo 'callback(要回传给a.com的数据)'

第二种： iframe
在a.com中创建一个a.html，在b.com中创建一个b.html，再在a.com中创建c.html，a.html调用b.html，再在b.thml中调用c.html，最后在c.khtml中top.function

第三种： 服务器代理：因为服务器端程序是不存在跨域问题

第四种： postMessage跨域
postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的window属性之一，它可用于解决以下方面的问题：
a.） 页面和其打开的新窗口的数据传递
b.） 多窗口之间消息传递
c.） 页面与嵌套的iframe消息传递
d.） 上面三个场景的跨域数据传递

用法：postMessage(data,origin)方法接受两个参数
data： html5规范支持任意基本类型或可复制的对象，但部分浏览器只支持字符串，所以传参时最好用JSON.stringify()序列化。
origin： 协议+主机+端口号，也可以设置为"*"，表示可以传递给任意窗口，如果要指定和当前窗口同源的话设置为"/"。

还有，我听说过window.name, 
还有cros跨资源共享：普通跨域请求：只服务端设置Access-Control-Allow-Origin即可，前端无须设置，若要带cookie请求：前后端都需要设置。
不过这个不太了解了。


































