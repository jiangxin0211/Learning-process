处理ie678的兼容性

最小高度问题

浮动后外边距多一倍

因为这个问题产生的原因是由于字体的原因，有一个默认高度


模块化开发

主要是代码重用

在require.js中使用define函数定义模块
define([a, b, c], function(a,b){
	？？？
	在定义的模块后面return 后面返回你想要的数据类型，
	也可以

	return 
}
}
具个例子，如果我定义了一个a模块，在另一个模块中
在define([a]){
	都可以
}

如果require([a])

define定义

rquire是使用

我有看过sea.js的一篇文章，有说明，使用异步的方式加载一个模块的话，可以提高模块的加载速度


同步就是require这个函数

异步是requierAsync这个函数吧，我有点忘记了

有一个回调


就可以在model和views中进行数据交换


可以在controller中在$scope中添加一些属性，这些属性中存入一些值

然后在view中使用ng-model中引用这些属性，就可以view中响应出这些值了



？？？？

哦哦，当我在views中使用了ng-model绑定的元素中改变元素的值时，比如一个文本框，那么model中的数据也会自动修改


有一个watch函数，您是不是想问的这个


就是监听数据的变化


这个我有看过文章 说的是用的观察者模式完成的，具体我没有看过源码

一种设计模式

有了解，工厂模式，

就是在一个工厂方法中创建对象

还有单例模式

始终在内存中保持只有一个对象存在，我知道在java中使用static来完成的


我想想，应该是先创建一个对象，然后在使用它的时候先判断这个对象是否存在，如果不存在就创建新的，存在就使用之前创建的那个，
语法是：

var obj = 

new Object()

或是new 
等同的一样的

在es5里有Object.create({a:1, b:2});

对象

不能post


就和php，java一样的，前端提交请求，node负责接收，处理，响应


使用http模块

我记得在学习的时候，有一个底层的语法 

先require('http')

var server = http.createServer(function(request, response){
	通过这个request

	如果是get方式，就request

	response.write()
})

response.writeHeader()

应该是在这函数中写状态码的值，具体我忘记了

看你想返回

你要说我了解的就这么多了

我用的是ci框架，里面有一个model

$this -> db -> query('select ******')


封装了一些常见的增删改查的操作，比直接写sql语法方便，最重要的是解决了低级的sql注入的安全

我学数据库的时候有接触过，比如在写一个查询的时候，

在使用or的时候，如果写一些特殊的语法，可以导致把所有数据全查出来


就是检测这个sql语句中是否有这种无效的sql语句，有的话，提示错误


不是的，or后面的语句是不是那种常见的注入的语法，

？

select * from 一个表名 where name='ss' or 1=1


我好像听说过

导出sql语句时见过

不太了解

您是说请求头，响应头那些

你想具体问什么

设置缓存

不太了解了

有，大学学过，不是特别精


可以

<>

比如定义类的时候指定一个类的具体的类型

就是在解决多任务的时候，利用


正常的情况下，需要排队，如果遇到zuse的情况下，优先级高的先执行

我们主要是做前端的，还是后端



谢谢

































